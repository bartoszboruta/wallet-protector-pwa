{"version":3,"sources":["utils/db.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/tesseract.js/src/browser/index.js","../node_modules/tesseract.js/src/index.js","../node_modules/tesseract.js/src/common/circularize.js","../node_modules/tesseract.js/src/common/job.js","components/DrawField.js","containers/Form/ImageRecognizer/index.js","containers/Form/index.js"],"names":["db","__webpack_require__","Dexie","version","stores","categories","costs","module","exports","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","defaultOptions","corePath","langPath","workerPath","spawnWorker","workerOptions","window","Blob","URL","blob","worker","Worker","createObjectURL","onmessage","e","packet","data","_recv","terminateWorker","terminate","sendPacket","loadImage","image","cb","test","document","querySelector","im","Image","src","onload","xhr","XMLHttpRequest","open","responseType","response","onerror","console","debug","send","File","fr","FileReader","result","readAsDataURL","getContext","tagName","c","createElement","width","naturalWidth","videoWidth","height","naturalHeight","videoHeight","ctx","drawImage","getImageData","canvas","Error","payload","img","postMessage","_classCallCheck","_createClass","adapter","circularize","TesseractJob","TesseractWorker","this","_currentJob","_queue","value","_this","options","arguments","undefined","_delay","job","lang","_send","_this2","fn","_this3","push","shift","_dequeue","status","action","id","jobId","_handle","warn","create","assign","page","paragraphs","lines","words","symbols","blocks","forEach","block","para","line","paragraph","word","sym","jobCounter","Math","random","toString","slice","_instance","_resolve","_reject","_progress","_finally","resolve","reject","catch","runFinallyCbs","log","ret","then","error","DrawField","_ref","_ref$strokeStyle","strokeStyle","_ref$lineJoin","lineJoin","_ref$lineWidth","lineWidth","_ref$onDrawEnd","onDrawEnd","_ref$onCancel","onCancel","_canvas","useRef","_useState","useState","_useState2","slicedToArray","paintMode","setPaintMode","_useState3","_useState4","canvasWidth","setCanvasWidth","_useState5","_useState6","canvasHeight","setCanvasHeight","useEffect","addEventListener","_resize","pointsX","pointsY","clickDrag","current","parentNode","clientWidth","_handleCancel","_handleMove","x","pageX","offsetLeft","y","pageY","offsetTop","_addPoint","dragging","_redraw","_handleUp","_ref2","context","beginPath","moveTo","lineTo","closePath","stroke","react_default","a","className","data-paper-resize","onMouseDown","onMouseMove","onMouseUp","onTouchCancel","onTouchMove","onTouchStart","ref","onClick","clearRect","ImageRecognizer","setCost","useContext","FormContext","components_DrawField","Tesseract","recognize","classify_bln_numeric_mode","tessedit_char_whitelist","progress","message","info","err","parseFloat","text","Category","lazy","bind","Form","_useContext","cost","categoryId","CategoryContext","Form_ImageRecognizer","onChange","type","disabled","_date","Date","_cost","table","add","createdAt","updatedAt","react","fallback"],"mappings":"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","file":"static/js/3.197921a1.chunk.js","sourcesContent":["import Dexie from 'dexie'\n\nconst db = new Dexie('WalletProtector')\n\ndb.version(1).stores({ categories: '++id,name,createdAt,updatedAt' })\ndb.version(1).stores({ costs: '++id,categoryId,cost,createdAt,updatedAt' })\n\nexport default db\n","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","var defaultOptions = {\n  // workerPath: 'https://cdn.jsdelivr.net/gh/naptha/tesseract.js@0.2.0/dist/worker.js',\n  corePath: 'https://cdn.jsdelivr.net/gh/naptha/tesseract.js-core@0.1.0/index.js',\n  langPath: 'https://tessdata.projectnaptha.com/3.02/'\n};\n\nif (process.env.NODE_ENV === \"development\") {\n  console.debug('Using Development Configuration');\n  defaultOptions.workerPath = location.protocol + '//' + location.host + '/dist/worker.dev.js?nocache=' + Math.random().toString(36).slice(3);\n} else {\n  var version = require('../../package.json').version;\n\n  defaultOptions.workerPath = 'https://cdn.jsdelivr.net/gh/naptha/tesseract.js@' + version + '/dist/worker.js';\n}\n\nexports.defaultOptions = defaultOptions;\n\nexports.spawnWorker = function spawnWorker(instance, workerOptions) {\n  if (window.Blob && window.URL) {\n    var blob = new Blob(['importScripts(\"' + workerOptions.workerPath + '\");']);\n    var worker = new Worker(window.URL.createObjectURL(blob));\n  } else {\n    var worker = new Worker(workerOptions.workerPath);\n  }\n\n  worker.onmessage = function (e) {\n    var packet = e.data;\n\n    instance._recv(packet);\n  };\n\n  return worker;\n};\n\nexports.terminateWorker = function (instance) {\n  instance.worker.terminate();\n};\n\nexports.sendPacket = function sendPacket(instance, packet) {\n  loadImage(packet.payload.image, function (img) {\n    packet.payload.image = img;\n    instance.worker.postMessage(packet);\n  });\n};\n\nfunction loadImage(image, cb) {\n  if (typeof image === 'string') {\n    if (/^\\#/.test(image)) {\n      // element css selector\n      return loadImage(document.querySelector(image), cb);\n    } else if (/(blob|data)\\:/.test(image)) {\n      // data url\n      var im = new Image();\n      im.src = image;\n\n      im.onload = function (e) {\n        return loadImage(im, cb);\n      };\n\n      return;\n    } else {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', image, true);\n      xhr.responseType = \"blob\";\n\n      xhr.onload = function (e) {\n        return loadImage(xhr.response, cb);\n      };\n\n      xhr.onerror = function (e) {\n        if (/^https?:\\/\\//.test(image) && !/^https:\\/\\/crossorigin.me/.test(image)) {\n          console.debug('Attempting to load image with CORS proxy');\n          loadImage('https://crossorigin.me/' + image, cb);\n        }\n      };\n\n      xhr.send(null);\n      return;\n    }\n  } else if (image instanceof File) {\n    // files\n    var fr = new FileReader();\n\n    fr.onload = function (e) {\n      return loadImage(fr.result, cb);\n    };\n\n    fr.readAsDataURL(image);\n    return;\n  } else if (image instanceof Blob) {\n    return loadImage(URL.createObjectURL(image), cb);\n  } else if (image.getContext) {\n    // canvas element\n    return loadImage(image.getContext('2d'), cb);\n  } else if (image.tagName == \"IMG\" || image.tagName == \"VIDEO\") {\n    // image element or video element\n    var c = document.createElement('canvas');\n    c.width = image.naturalWidth || image.videoWidth;\n    c.height = image.naturalHeight || image.videoHeight;\n    var ctx = c.getContext('2d');\n    ctx.drawImage(image, 0, 0);\n    return loadImage(ctx, cb);\n  } else if (image.getImageData) {\n    // canvas context\n    var data = image.getImageData(0, 0, image.canvas.width, image.canvas.height);\n    return loadImage(data, cb);\n  } else {\n    return cb(image);\n  }\n\n  throw new Error('Missing return in loadImage cascade');\n}","var _classCallCheck = require(\"/Users/bartoszboruta/projects/wallet-protector-pwa/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/bartoszboruta/projects/wallet-protector-pwa/node_modules/@babel/runtime/helpers/createClass\");\n\nvar adapter = require('./node/index.js');\n\nvar circularize = require('./common/circularize.js');\n\nvar TesseractJob = require('./common/job');\n\nvar version = require('../package.json').version;\n\nvar create = function create() {\n  var workerOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var worker = new TesseractWorker(Object.assign({}, adapter.defaultOptions, workerOptions));\n  worker.create = create;\n  worker.version = version;\n  return worker;\n};\n\nvar TesseractWorker =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  function TesseractWorker(workerOptions) {\n    _classCallCheck(this, TesseractWorker);\n\n    this.worker = null;\n    this.workerOptions = workerOptions;\n    this._currentJob = null;\n    this._queue = [];\n  }\n\n  _createClass(TesseractWorker, [{\n    key: \"recognize\",\n    value: function recognize(image) {\n      var _this = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this._delay(function (job) {\n        if (typeof options === 'string') options = {\n          lang: options\n        };\n        options.lang = options.lang || 'eng';\n\n        job._send('recognize', {\n          image: image,\n          options: options,\n          workerOptions: _this.workerOptions\n        });\n      });\n    }\n  }, {\n    key: \"detect\",\n    value: function detect(image) {\n      var _this2 = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this._delay(function (job) {\n        job._send('detect', {\n          image: image,\n          options: options,\n          workerOptions: _this2.workerOptions\n        });\n      });\n    }\n  }, {\n    key: \"terminate\",\n    value: function terminate() {\n      if (this.worker) adapter.terminateWorker(this);\n      this.worker = null;\n      this._currentJob = null;\n      this._queue = [];\n    }\n  }, {\n    key: \"_delay\",\n    value: function _delay(fn) {\n      var _this3 = this;\n\n      if (!this.worker) this.worker = adapter.spawnWorker(this, this.workerOptions);\n      var job = new TesseractJob(this);\n\n      this._queue.push(function (e) {\n        _this3._queue.shift();\n\n        _this3._currentJob = job;\n        fn(job);\n      });\n\n      if (!this._currentJob) this._dequeue();\n      return job;\n    }\n  }, {\n    key: \"_dequeue\",\n    value: function _dequeue() {\n      this._currentJob = null;\n\n      if (this._queue.length) {\n        this._queue[0]();\n      }\n    }\n  }, {\n    key: \"_recv\",\n    value: function _recv(packet) {\n      if (packet.status === 'resolve' && packet.action === 'recognize') {\n        packet.data = circularize(packet.data);\n      }\n\n      if (this._currentJob.id === packet.jobId) {\n        this._currentJob._handle(packet);\n      } else {\n        console.warn('Job ID ' + packet.jobId + ' not known.');\n      }\n    }\n  }]);\n\n  return TesseractWorker;\n}();\n\nmodule.exports = create();","// The result of dump.js is a big JSON tree\n// which can be easily serialized (for instance\n// to be sent from a webworker to the main app\n// or through Node's IPC), but we want\n// a (circular) DOM-like interface for walking\n// through the data. \nmodule.exports = function circularize(page) {\n  page.paragraphs = [];\n  page.lines = [];\n  page.words = [];\n  page.symbols = [];\n  page.blocks.forEach(function (block) {\n    block.page = page;\n    block.lines = [];\n    block.words = [];\n    block.symbols = [];\n    block.paragraphs.forEach(function (para) {\n      para.block = block;\n      para.page = page;\n      para.words = [];\n      para.symbols = [];\n      para.lines.forEach(function (line) {\n        line.paragraph = para;\n        line.block = block;\n        line.page = page;\n        line.symbols = [];\n        line.words.forEach(function (word) {\n          word.line = line;\n          word.paragraph = para;\n          word.block = block;\n          word.page = page;\n          word.symbols.forEach(function (sym) {\n            sym.word = word;\n            sym.line = line;\n            sym.paragraph = para;\n            sym.block = block;\n            sym.page = page;\n            sym.line.symbols.push(sym);\n            sym.paragraph.symbols.push(sym);\n            sym.block.symbols.push(sym);\n            sym.page.symbols.push(sym);\n          });\n          word.paragraph.words.push(word);\n          word.block.words.push(word);\n          word.page.words.push(word);\n        });\n        line.block.lines.push(line);\n        line.page.lines.push(line);\n      });\n      para.page.paragraphs.push(para);\n    });\n  });\n  return page;\n};","var _classCallCheck = require(\"/Users/bartoszboruta/projects/wallet-protector-pwa/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/bartoszboruta/projects/wallet-protector-pwa/node_modules/@babel/runtime/helpers/createClass\");\n\nvar adapter = require('../node/index.js');\n\nvar jobCounter = 0;\n\nmodule.exports =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  function TesseractJob(instance) {\n    _classCallCheck(this, TesseractJob);\n\n    this.id = 'Job-' + ++jobCounter + '-' + Math.random().toString(16).slice(3, 8);\n    this._instance = instance;\n    this._resolve = [];\n    this._reject = [];\n    this._progress = [];\n    this._finally = [];\n  }\n\n  _createClass(TesseractJob, [{\n    key: \"then\",\n    value: function then(resolve, reject) {\n      if (this._resolve.push) {\n        this._resolve.push(resolve);\n      } else {\n        resolve(this._resolve);\n      }\n\n      if (reject) this.catch(reject);\n      return this;\n    }\n  }, {\n    key: \"catch\",\n    value: function _catch(reject) {\n      if (this._reject.push) {\n        this._reject.push(reject);\n      } else {\n        reject(this._reject);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"progress\",\n    value: function progress(fn) {\n      this._progress.push(fn);\n\n      return this;\n    }\n  }, {\n    key: \"finally\",\n    value: function _finally(fn) {\n      this._finally.push(fn);\n\n      return this;\n    }\n  }, {\n    key: \"_send\",\n    value: function _send(action, payload) {\n      adapter.sendPacket(this._instance, {\n        jobId: this.id,\n        action: action,\n        payload: payload\n      });\n    }\n  }, {\n    key: \"_handle\",\n    value: function _handle(packet) {\n      var data = packet.data;\n      var runFinallyCbs = false;\n\n      if (packet.status === 'resolve') {\n        if (this._resolve.length === 0) console.log(data);\n\n        this._resolve.forEach(function (fn) {\n          var ret = fn(data);\n\n          if (ret && typeof ret.then == 'function') {\n            console.warn('TesseractJob instances do not chain like ES6 Promises. To convert it into a real promise, use Promise.resolve.');\n          }\n        });\n\n        this._resolve = data;\n\n        this._instance._dequeue();\n\n        runFinallyCbs = true;\n      } else if (packet.status === 'reject') {\n        if (this._reject.length === 0) console.error(data);\n\n        this._reject.forEach(function (fn) {\n          return fn(data);\n        });\n\n        this._reject = data;\n\n        this._instance._dequeue();\n\n        runFinallyCbs = true;\n      } else if (packet.status === 'progress') {\n        this._progress.forEach(function (fn) {\n          return fn(data);\n        });\n      } else {\n        console.warn('Message type unknown', packet.status);\n      }\n\n      if (runFinallyCbs) {\n        this._finally.forEach(function (fn) {\n          return fn(data);\n        });\n      }\n    }\n  }]);\n\n  return TesseractJob;\n}();","import React, { useEffect, useRef, useState } from 'react'\nimport propTypes from 'prop-types'\n\nconst DrawField = ({\n  strokeStyle = '#c75353',\n  lineJoin = 'round',\n  lineWidth = 5,\n  onDrawEnd = () => {},\n  onCancel = () => {},\n}) => {\n  const _canvas = useRef(null)\n  const [paintMode, setPaintMode] = useState(false)\n  const [canvasWidth, setCanvasWidth] = useState(300)\n  const [canvasHeight, setCanvasHeight] = useState(400)\n\n  useEffect(() => {\n    window.addEventListener('resize', _resize)\n    _resize()\n  }, [])\n\n  let pointsX = []\n  let pointsY = []\n  let clickDrag = []\n\n  const _resize = () => {\n    const width = _canvas.current.parentNode.clientWidth\n    setCanvasWidth(width)\n    setCanvasHeight(width < 320 ? width : 320)\n  }\n\n  const _handleCancel = () => {\n    setPaintMode(true)\n  }\n\n  const _handleMove = e => {\n    if (!paintMode) {\n      return\n    }\n    const x = e.pageX - _canvas.current.offsetLeft\n    const y = e.pageY - _canvas.current.offsetTop\n    const dragging = true\n\n    _addPoint({ dragging, x, y })\n    _redraw()\n  }\n\n  const _handleUp = () => {\n    setPaintMode(false)\n    onDrawEnd(_canvas.current.getContext('2d'))\n  }\n\n  const _addPoint = ({ dragging, x, y }) => {\n    pointsX.push(x)\n    pointsY.push(y)\n    clickDrag.push(dragging)\n  }\n\n  const _redraw = () => {\n    const context = _canvas.current.getContext('2d')\n    context.strokeStyle = strokeStyle\n    context.lineJoin = lineJoin\n    context.lineWidth = lineWidth\n\n    for (let i = 0; i < pointsX.length; i++) {\n      context.beginPath()\n      if (clickDrag[i] && i) {\n        context.moveTo(pointsX[i - 1], pointsY[i - 1])\n      } else {\n        context.moveTo(pointsX[i] - 1, pointsY[i])\n      }\n      context.lineTo(pointsX[i], pointsY[i])\n      context.closePath()\n      context.stroke()\n    }\n  }\n\n  const _clearCanvas = () => {\n    const context = _canvas.current.getContext('2d')\n\n    context.clearRect(0, 0, context.canvas.width, context.canvas.height)\n    onCancel()\n  }\n\n  return (\n    <div className=\"drawfield\">\n      <canvas\n        data-paper-resize={true}\n        height={canvasHeight}\n        onMouseDown={_handleCancel}\n        onMouseMove={_handleMove}\n        onMouseUp={_handleUp}\n        onTouchCancel={_handleCancel}\n        onTouchMove={_handleMove}\n        onTouchStart={_handleUp}\n        ref={_canvas}\n        width={canvasWidth}\n      />\n      <button className=\"btn\" onClick={_clearCanvas}>\n        Clear\n      </button>\n    </div>\n  )\n}\n\nDrawField.propTypes = {\n  strokeStyle: propTypes.string,\n  lineJoin: propTypes.string,\n  lineWidth: propTypes.number,\n  onDrawEnd: propTypes.func,\n  onCancel: propTypes.func,\n}\n\nexport default DrawField\n","import React, { useContext } from 'react'\nimport Tesseract from 'tesseract.js'\n\nimport { FormContext } from 'containers/Form/Context'\nimport DrawField from 'components/DrawField'\n\nconst ImageRecognizer = () => {\n  const { setCost } = useContext(FormContext)\n\n  const _handleDrawEnd = image => {\n    Tesseract.recognize(image, {\n      classify_bln_numeric_mode: true,\n      tessedit_char_whitelist: '0123456789,.',\n    })\n      .progress(message => console.info(message))\n      .catch(err => console.error(err))\n      .then(result => setCost(parseFloat(result.text)))\n  }\n\n  return <DrawField onCancel={() => setCost(0)} onDrawEnd={_handleDrawEnd} />\n}\n\nexport default ImageRecognizer\n","import React, { lazy, Suspense, useContext } from 'react'\n\nimport { FormContext } from './Context'\nimport { CategoryContext } from 'containers/Category/Context'\nimport ImageRecognizer from './ImageRecognizer'\nimport db from 'utils/db'\n\nconst Category = lazy(() => import('./Category'))\n\nconst Form = () => {\n  const { cost, setCost } = useContext(FormContext)\n  const { categoryId } = useContext(CategoryContext)\n\n  const addCost = () => {\n    const _date = new Date()\n    const _cost = parseFloat(cost)\n\n    db.table('costs')\n      .add({ cost: _cost, categoryId, createdAt: _date, updatedAt: _date })\n      .then(() => setCost(0))\n  }\n\n  return (\n    <div className=\"form\">\n      <ImageRecognizer />\n      <div className=\"content\">\n        <input\n          className=\"input\"\n          onChange={({ target: { value } }) => setCost(value)}\n          type=\"number\"\n          value={cost}\n        />\n        <button className=\"btn\" disabled={!cost || !categoryId} onClick={addCost}>\n          Accept\n        </button>\n      </div>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Category />\n      </Suspense>\n    </div>\n  )\n}\n\nexport default Form\n"],"sourceRoot":""}