{"version":3,"sources":["containers/Data/Context.js","utils/db.js","containers/Category/Context.js","containers/Main/Context.js","containers/Counter/Context.js","components/Layout/Menu.js","components/Layout/Header.js","components/Layout/index.js","App.js","serviceWorker.js","index.js"],"names":["DataContext","React","createContext","DataProvider","_ref","children","_useState","useState","_useState2","Object","_Users_bartoszboruta_projects_wallet_protector_pwa_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","costs","setCosts","useEffect","db","table","toArray","then","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","Provider","value","addCost","_ref2","cost","categoryId","_date","Date","newCost","parseFloat","createdAt","updatedAt","add","id","concat","_Users_bartoszboruta_projects_wallet_protector_pwa_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","_Users_bartoszboruta_projects_wallet_protector_pwa_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","Dexie","version","stores","categories","CategoryContext","CategoryProvider","_Users_bartoszboruta_projects_wallet_protector_pwa_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","setCategories","_useState3","parseInt","localStorage","getItem","_useState4","setCategoryId","react__WEBPACK_IMPORTED_MODULE_1___default","setItem","MainContext","MainProvider","setCost","CounterContext","CounterProvider","useContext","currentDateCounter","setCurrentDateCounter","currentMonthCounter","_useState5","_useState6","currentYearCounter","_useState7","_useState8","totalCounter","setTotalCounter","useLayoutEffect","console","log","_totalCounter","map","reduce","prev","next","_setTotalCounter","filter","_setCurrentDateCounter","Menu","react_default","BurgerMenu","outerContainerId","pageWrapId","NavLink","exact","to","Header","Category","lazy","e","bind","Main","Settings","Stats","withRouter","lib","autoClose","Layout_Menu","Layout_Header","Switch","react","fallback","className","Data_Context","Counter_Context","Category_Context","Context","Route","component","path","App","BrowserRouter","basename","process","components_Layout","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.11af48a8.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport propTypes from 'prop-types'\n\nimport db from 'utils/db'\n\nexport const DataContext = React.createContext({})\n\nexport const DataProvider = ({ children }) => {\n  const [costs, setCosts] = useState([{}])\n\n  useEffect(() => {\n    db.table('costs')\n      .toArray()\n      .then(costs => {\n        setCosts(costs)\n      })\n  }, [])\n\n  const addCost = ({ cost, categoryId }) => {\n    const _date = new Date()\n    const newCost = { cost: parseFloat(cost), categoryId, createdAt: _date, updatedAt: _date }\n\n    db.table('costs')\n      .add(newCost)\n      .then(id => {\n        setCosts([...costs, { ...newCost, id }])\n      })\n  }\n\n  return <DataContext.Provider value={{ costs, addCost }}>{children}</DataContext.Provider>\n}\n\nDataProvider.propTypes = {\n  children: propTypes.func,\n}\n","import Dexie from 'dexie'\n\nconst db = new Dexie('WalletProtector')\n\ndb.version(1).stores({ categories: '++id,name,createdAt,updatedAt' })\ndb.version(1).stores({ costs: '++id,categoryId,cost,createdAt,updatedAt' })\n\nexport default db\n","import React, { useState } from 'react'\nimport propTypes from 'prop-types'\n\nexport const CategoryContext = React.createContext({})\n\nexport const CategoryProvider = ({ children }) => {\n  const [categories, setCategories] = useState([])\n  const [categoryId, setCategoryId] = useState(parseInt(localStorage.getItem('categoryId')) || 0)\n\n  const _setCategoryId = categoryId => {\n    setCategoryId(categoryId)\n    localStorage.setItem('categoryId', categoryId)\n  }\n\n  return (\n    <CategoryContext.Provider\n      value={{ categories, setCategories, categoryId, setCategoryId: _setCategoryId }}\n    >\n      {children}\n    </CategoryContext.Provider>\n  )\n}\n\nCategoryProvider.propTypes = {\n  children: propTypes.func,\n}\n","import React, { useState } from 'react'\nimport propTypes from 'prop-types'\n\nexport const MainContext = React.createContext({})\n\nexport const MainProvider = ({ children }) => {\n  const [cost, setCost] = useState(0)\n\n  return <MainContext.Provider value={{ cost, setCost }}>{children}</MainContext.Provider>\n}\n\nMainProvider.propTypes = {\n  children: propTypes.func,\n}\n","import React, { useContext, useLayoutEffect, useState } from 'react'\nimport propTypes from 'prop-types'\n\nimport { DataContext } from 'containers/Data/Context'\n\nexport const CounterContext = React.createContext({})\n\nexport const CounterProvider = ({ children }) => {\n  const { costs } = useContext(DataContext)\n  const [currentDateCounter, setCurrentDateCounter] = useState(0)\n  const [currentMonthCounter, setCurrentMonthCounter] = useState(0)\n  const [currentYearCounter, setCurrentYearCounter] = useState(0)\n  const [totalCounter, setTotalCounter] = useState(0)\n\n  const _setTotalCounter = () => {\n    const _totalCounter = costs.map(cost => cost.cost).reduce((prev, next) => prev + next)\n    setTotalCounter(_totalCounter)\n  }\n  const _setCurrentDateCounter = () => {\n    const today = new Date()\n    const currentDayCosts = costs.filter(cost => {\n      console.log(costs)\n    })\n    const _totalCounter = costs.map(cost => cost.cost).reduce((prev, next) => prev + next)\n    setCurrentDateCounter(_totalCounter)\n  }\n\n  useLayoutEffect(() => {\n    console.log(123)\n    _setTotalCounter()\n    _setCurrentDateCounter()\n  }, {})\n\n  return (\n    <CounterContext.Provider\n      value={{ currentDateCounter, currentMonthCounter, currentYearCounter, totalCounter }}\n    >\n      {children}\n    </CounterContext.Provider>\n  )\n}\n\nCounterProvider.propTypes = {\n  children: propTypes.func,\n}\n","import React from 'react'\nimport { slide as BurgerMenu } from 'react-burger-menu'\nimport { NavLink } from 'react-router-dom'\n\nconst Menu = () => (\n  <BurgerMenu outerContainerId={'outer-container'} pageWrapId={'page-wrap'}>\n    <NavLink exact to=\"/\">\n      Form\n    </NavLink>\n    <NavLink to=\"/stats\">Stats</NavLink>\n    <NavLink to=\"/settings\">Settings</NavLink>\n    <NavLink to=\"/category\">Category</NavLink>\n  </BurgerMenu>\n)\n\nexport default Menu\n","import React from 'react'\n\nconst Header = () => {\n  return <header>Header</header>\n}\n\nexport default Header\n","import React, { lazy, Suspense } from 'react'\nimport { Route, Switch, withRouter } from 'react-router-dom'\nimport { ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.min.css'\n\nimport Menu from './Menu'\nimport Header from './Header'\nimport { MainProvider } from 'containers/Main/Context'\nimport { CategoryProvider } from 'containers/Category/Context'\nimport { CounterProvider } from 'containers/Counter/Context'\nimport { DataProvider } from 'containers/Data/Context'\n\nconst Category = lazy(() => import('containers/Category'))\nconst Main = lazy(() => import('containers/Main'))\nconst Settings = lazy(() => import('containers/Settings'))\nconst Stats = lazy(() => import('containers/Stats'))\n\nconst Layout = () => (\n  <div id=\"outer-container\">\n    <ToastContainer autoClose={3000} />\n    <Menu />\n    <Header />\n    <Switch>\n      <Suspense fallback={<div>Loading...</div>}>\n        <main id=\"page-wrap\">\n          <div className=\"container\">\n            <DataProvider>\n              <CounterProvider>\n                <CategoryProvider>\n                  <MainProvider>\n                    <Route component={Main} exact path=\"/\" />\n                  </MainProvider>\n                  <Route component={Category} path=\"/category\" />\n                </CategoryProvider>\n                <Route component={Settings} path=\"/settings\" />\n                <Route component={Stats} path=\"/stats\" />\n              </CounterProvider>\n            </DataProvider>\n          </div>\n        </main>\n      </Suspense>\n    </Switch>\n  </div>\n)\n\nexport default withRouter(Layout)\n","import React from 'react'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport Layout from 'components/Layout'\n\nconst App = () => (\n  <Router basename={process.env.PUBLIC_URL}>\n    <Layout />\n  </Router>\n)\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport 'styles/index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}